name: Scrape all sites and make a pull request

on:
#   push:
#     branches: [ main ]
  pull_request:
    branches: [ main ]
    paths: 
      - .github/workflows/scrape-all-to-pr.js.yml

  schedule:
    - cron:  '15 2 3 * *'

jobs:
  scrape-forbrugsforeningen:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout 
      uses: actions/checkout@v2
      
    - name: Node install and run
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - run: |
        npm ci
        node . forbrugsforeningen

    - name: Save npm failure logs as artifact
      if: ${{ failure() }} # Perform this step if some error happened
      uses: actions/upload-artifact@v2
      with:
        name: forbrugsforeningen-npm-logs
        path: |
          /home/runner/.npm/_logs/*

    - name: temporarily save scrape data to artifact
      uses: actions/upload-artifact@v2
      with:
        name: forbrugsforeningen-artifact
        path: ./scraped-data/forb
        retention-days: 1

  scrape-logbuy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout 
      uses: actions/checkout@v2

    - name: Create .env file
      run: |
          touch .env
          echo 'LOGBUY_USER=${{ secrets.LOGBUY_USER }}' >> .env
          echo 'LOGBUY_PASS=${{ secrets.LOGBUY_PASS }}' >> .env
          cat .env
      
    - name: Node install and run
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - run: |
        npm ci
        node . logbuy

    - name: Save npm failure logs as artifact
      if: ${{ failure() }} # Perform this step if some error happened
      uses: actions/upload-artifact@v2
      with:
        name: logbuy-npm-logs
        path: |
          /home/runner/.npm/_logs/*

    - name: temporarily save scrape data to artifact
      uses: actions/upload-artifact@v2
      with:
        name: logbuy-artifact
        path: ./scraped-data/logb
        retention-days: 1

  scrape-coop:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout 
      uses: actions/checkout@v2

    - name: Node install and run
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - run: |
        npm ci
        node . coop

    - name: Save npm failure logs as artifact
      if: ${{ failure() }} # Perform this step if some error happened
      uses: actions/upload-artifact@v2
      with:
        name: coop-npm-logs
        path: |
          /home/runner/.npm/_logs/*

    - name: temporarily save scrape data to artifact
      uses: actions/upload-artifact@v2
      with:
        name: coop-artifact
        path: ./scraped-data/coop
        retention-days: 1

  scrape-aeldresagen:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout 
      uses: actions/checkout@v2
      
    - name: Node install and run
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - run: |
        npm ci
        node . aeldresagen

    - name: Save npm failure logs as artifact
      if: ${{ failure() }} # Perform this step if some error happened
      uses: actions/upload-artifact@v2
      with:
        name: aeldresagen-npm-logs
        path: |
          /home/runner/.npm/_logs/*

    - name: temporarily save scrape data to artifact
      uses: actions/upload-artifact@v2
      with:
        name: aeldresagen-artifact
        path: ./scraped-data/aeld
        retention-days: 1

  make-dist:
    needs: [scrape-forbrugsforeningen, scrape-logbuy, scrape-coop, scrape-aeldresagen]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout 
      uses: actions/checkout@v2

    - name: get artifact from forbrugsforeningen scrape run
      uses: actions/download-artifact@master
      with:
        name: forbrugsforeningen-artifact
        path: ./scraped-data/forb

    - name: get artifact from logbuy scrape run
      uses: actions/download-artifact@master
      with:
        name: logbuy-artifact
        path: ./scraped-data/logb

    - name: get artifact from coop scrape run
      uses: actions/download-artifact@master
      with:
        name: coop-artifact
        path: ./scraped-data/coop

    - name: get artifact from aeldresagen scrape run
      uses: actions/download-artifact@master
      with:
        name: aeldresagen-artifact
        path: ./scraped-data/aeld


    - name: Node install and run
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - run: |
        npm ci
        node . dist
        npm run analyseLastScrape

    - name: Collect log files to make body for pull request
      id: get-pr-body
      run: |
        outputFile=./logs/report.log
        # Delete and make a new file
        rm -f $outputFile
        touch $outputFile
        # Loop output files from analyse from last scrape
        for inputFile in `find ./logs/analyseLastScrape/ -type f`
        do
          service=$(basename $inputFile .json)
          countNewFile=$( cat $inputFile | jq -r "._analyse.countNewFile" )
          countAdded=$( cat $inputFile | jq -r "._analyse.countAdded" )
          countRemoved=$( cat $inputFile | jq -r "._analyse.countRemoved" )
          echo " - **$service** - total entries $countNewFile (new $countAdded / removed $countRemoved)">> $outputFile
        done
        cat $outputFile
        # Define pull request body to be used in laster steps
        pr_body=$( cat $outputFile )
        # Replace some badly handled characters with Unicode characters
        pr_body="${pr_body//'%'/'%25'}"
        pr_body="${pr_body//$'\n'/'%0A'}"
        pr_body="${pr_body//$'\r'/'%0D'}" 
        # Save variable as an output
        echo ::set-output name=body::$pr_body

    - name: temporarily made dist files artifact
      uses: actions/upload-artifact@v2
      with:
        name: dist-artifact
        path: ./dist
        retention-days: 1

    - name: temporarily scrape files artifact
      uses: actions/upload-artifact@v2
      with:
        name: scraped-data-artifact
        path: ./scraped-data
        retention-days: 1

    # - name: Create Pull Request # Does so only if any files in repo have changed
    #   uses: peter-evans/create-pull-request@v3
    #   with:
    #     token: ${{ secrets.MY_GITHUB_PAT }}
    #     commit-message: New scrape
    #     committer: bot_${{ github.event_name }} <bot_${{ github.event_name }}@users.noreply.github.com>
    #     # author cant be changed from owner when using PAT issue#48
    #     branch: auto-new-scrape
    #     delete-branch: true
    #     title: New scrape
    #     body: |
    #       New scrape performed
          
    #       ${{ steps.get-pr-body.outputs.body }}

    #       *Auto-generated by [create-pull-request][1]*

    #       [1]: https://github.com/peter-evans/create-pull-request
    #     labels: auto-pr
    #     assignees: zinen
        
    - name: Save logs as artifact
      if: ${{ always() }} # Perform this step no matter any errors
      uses: actions/upload-artifact@v2
      with:
        name: logs
        path: |
          ./logs/*