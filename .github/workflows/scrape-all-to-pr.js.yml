name: Scrape all sites and make a pull request

on:
  push:
    branches: [ zinen-patch-1 ]
  pull_request:
    branches: [ zinen-patch-1 ]

  workflow_dispatch:

jobs:

  scrape:
    strategy:
      # Don't cancel the other jobs if one fails
      fail-fast: false
      matrix:
        include: 
            # Much of this matches content in ./settings.js
          - discount-service: 'coop'
            store-scrapes: './scraped-data/coop'
            artifact-name: 'coop-artifact'
            artifact-name-failure: 'coop-npm-logs'
            
    runs-on: ubuntu-latest
    steps:
    - name: Checkout 
      uses: actions/checkout@v3

    - name: Node install and run
      uses: actions/setup-node@v3
    - run: |
        npm ci
        node . ${{ matrix.discount-service }}
    - name: Save npm failure logs as artifact
      if: ${{ failure() }} # Perform this step if some error happened
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact-name-failure}}
        path: |
          /home/runner/.npm/_logs/*
    - name: temporarily save scrape data to artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact-name}}
        path: ${{ matrix.store-scrapes}}
        retention-days: 1

  make-dist:
    if: ${{ always() }} # Perform this step no matter any errors
    needs: scrape
    runs-on: ubuntu-latest
    steps:
    - name: Checkout 
      uses: actions/checkout@v3

    - name: Node install and run
      uses: actions/setup-node@v3
    - run: |
        npm ci
        node . dist
        npm run analyzeLastScrape

    - name: Collect log files to make body for pull request
      id: get-pr-body
      run: |
        outputFile=./logs/report.log
        # Run script
        node ./utils/make-auto-pr-body.js $outputFile
        cat $outputFile
        # Define pull request body to be used in laster steps
        pr_body=$( cat $outputFile )
        delimiter="$(openssl rand -hex 8)"
        echo "body<<$delimiter" >> $GITHUB_OUTPUT
        echo "$pr_body" >> $GITHUB_OUTPUT
        echo "$delimiter" >> $GITHUB_OUTPUT

    - name: Create Pull Request # Does so only if any files in repo have changed
      uses: peter-evans/create-pull-request@v4
      with:
        token: ${{ secrets.MY_GITHUB_PAT }}
        commit-message: New scrape
        committer: bot_${{ github.event_name }} <bot_${{ github.event_name }}@users.noreply.github.com>
        # author cant be changed from owner when using PAT issue#48
        branch: auto-new-scrape
        delete-branch: true
        title: New scrape
        base: zinen-patch-1
        body: |
          New scrape performed
          
          ${{ steps.get-pr-body.outputs.body }}

          *Auto-generated by [create-pull-request][1]*

          [1]: https://github.com/peter-evans/create-pull-request
        labels: test
